#define FCY 4000000ULL
#include <stdio.h>
#include <stdlib.h>
#include <stddef.h>
#include <stdbool.h>
#include <libpic30.h>
#include "app.h"

#define ONE_VOLT 310
#define ONE_TENTH_VOLT 31
#define ONE_HUNDREDTH_VOLT 3
void zad1( void );
void zad2( void );
void zad3( void );
void zad4( void );
void zad6( void );
void zad7( void );
void zad8( void );
void zad9( void );
void r_program( int prog );
APP_DATA appData = {
.messageLine1 = "Explorer 16 Demo" ,
.messageLine2 = "Press S3 to cont" ,
.messageTime = "Time 00: 00: 00 " ,
.messageADC = " Pot = 0.00 Vdc "
} ;

// *****************************************************************************
// *****************************************************************************
// Section: Main Entry Point
// *****************************************************************************
// *****************************************************************************
int main ( void )
{

    SYS_Initialize();
LED_Enable(LED_D3);
LED_Enable(LED_D4);
LED_Enable(LED_D5);
LED_Enable(LED_D6);
LED_Enable(LED_D7);
LED_Enable(LED_D8);
LED_Enable(LED_D9);
LED_Enable(LED_D10);
int prog = 1;
/* Infinite Loop */
    while ( 1 )
    {
    delay(500);
    if(BUTTON_IsPressed(BUTTON_S3))
    {
    prog++;
    }
    else if (BUTTON_IsPressed(BUTTON_S6))
    {
    prog--;
    }
    if(prog > 9)
    {
    prog = 1;
    }
    else if (prog < 1)
    {
    prog = 9;
    }
    LCD_ClearScreen();
    char txt[16];
    sprintf(txt, "Zadanie %d", prog);
    LCD_PutString(txt, sizeof(txt)-1);
    r_program(prog);
    LATA = 0;
    //LED_On(LED_D10);
    delay(200);
    } ;
}

void delay(unsigned int ms)
{
unsigned int i;
unsigned char j;

for (i = 0; i < ms; i++) {

for (j = 0; j < 200; j++) {
Nop();
Nop();
Nop();
Nop();
Nop();
}
}
}
void zad1(void)
{
for (int i = 0;i<=256;i++)
{
LATA=i;
delay(500);
if(BUTTON_IsPressed(BUTTON_S3) || BUTTON_IsPressed(BUTTON_S6))
{
break;
}
}
}
void zad2(void){

for (int i=256; i>0; i--)
{
LATA = i;
delay(500);
if(BUTTON_IsPressed(BUTTON_S3) || BUTTON_IsPressed(BUTTON_S6))
{
break;
}
}
}

void zad3(void)
{
for (int i=0; i<256; i++)
{
LATA = i ^ (i >> 1);;
delay(500);
if(BUTTON_IsPressed(BUTTON_S3) || BUTTON_IsPressed(BUTTON_S6))
{
break;
}
}
}

void zad4(void)
{
for (int i=256; i>0; i--)
{
LATA = i ^ (i >> 1);;
delay(500);
if(BUTTON_IsPressed(BUTTON_S3) || BUTTON_IsPressed(BUTTON_S6))
{
break;
}
}
}
void zad5(void){
for (int i=0; i<145; i+=16){
    for (int j=0; j<10; j++) {
    LATA = i + j;
    delay(500);
    if(BUTTON_IsPressed(BUTTON_S3) || BUTTON_IsPressed(BUTTON_S6))
    {
    break;
    }
    }
}
}
void zad6(void){
for (int i=144; i>=0; i-=16){
    for (int j=9; j>=0; j--) {
    LATA = i + j;
    delay(500);
    if(BUTTON_IsPressed(BUTTON_S3) || BUTTON_IsPressed(BUTTON_S6))
    {
    break;
    }
    }
}
}
void zad7(void) {
int counter = 7;
while (1) {
for (int i = 0; i < 5; i++) {
LATA = counter;
counter <<= 1;
delay(500);
}
for (int j = 0; j < 5; j++) {
LATA = counter;
counter >>= 1;
delay(500);
}
if(BUTTON_IsPressed(BUTTON_S3) || BUTTON_IsPressed(BUTTON_S6)) {
break;
}
}
}

void zad8(void)
{
int x = 7;
int bit8 = 1;
int bit8_2 = 0;
while(1){
delay(300);
for(int i = 0; i < x; i++){
delay(300);
LATA = bit8 + bit8_2;
bit8 <<= 1;
}
bit8_2 = bit8_2 + bit8;
delay(300);
LATA = bit8_2;
bit8 = 1;
x--;

if(x == -1){
x = 7;
bit8_2 = 0;
}
if(BUTTON_IsPressed(BUTTON_S3) || BUTTON_IsPressed(BUTTON_S6))
{
break;
}
}
}

void zad9()
{
while(1){
delay(400);
int i, j;
int num[64];
// tablic? od 0 do 63 (6-bit))
for (i = 0; i < 64; i++) {
num[i] = i;
}
srand(TMR1);
for (i = 63; i > 0; i--) {
j = rand() % (i + 1);
int temp = num[i];
num[i] = num[j];
num[j] = temp;
}
for (i = 0; i < 64; i++) {
LATA = num[i];
delay(400);
}
if(BUTTON_IsPressed(BUTTON_S3) || BUTTON_IsPressed(BUTTON_S6))
{
break;
}
}
}

void r_program(int prog)
{
switch(prog)
{
case 1:
zad1();
break;
case 2:
zad2();
break;
case 3:
zad3();
break;
case 4:
zad4();
break;
case 5:
zad5();
break;
case 6:
zad6();
break;
case 7:
zad7();
break;
case 8:
zad8();
break;
case 9:
zad9();
break;
default:
zad1();
break;
}
}